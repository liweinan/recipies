// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class ChatServerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements ChatServer, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_broadcastMessage_0;
    private static java.lang.reflect.Method $method_registerChatClient_1;
    
    static {
	try {
	    $method_broadcastMessage_0 = ChatServer.class.getMethod("broadcastMessage", new java.lang.Class[] {java.lang.String.class});
	    $method_registerChatClient_1 = ChatServer.class.getMethod("registerChatClient", new java.lang.Class[] {ChatClient.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public ChatServerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of broadcastMessage(String)
    public void broadcastMessage(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_broadcastMessage_0, new java.lang.Object[] {$param_String_1}, 4263948946936149209L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of registerChatClient(ChatClient)
    public void registerChatClient(ChatClient $param_ChatClient_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_registerChatClient_1, new java.lang.Object[] {$param_ChatClient_1}, -4597692492392034940L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
